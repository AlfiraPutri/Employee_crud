'use-client'
import Head from 'next/head';
import { BiUserPlus, BiX, BiCheck } from "react-icons/bi";
import Table from '../components/table';
import { useSelector, useDispatch } from 'react-redux';
import { toggleChangeAction, deleteAction } from '../redux/reducer';
import { deleteUser, getUsers } from '../lib/helper';
import { useQueryClient } from 'react-query';
import { useAuthState } from 'react-firebase-hooks/auth';
import { auth } from '../firebase/config';
import { signOut } from 'firebase/auth';
import { useEffect } from 'react';
import { useRouter } from 'next/router';

export default function Home() {
  const deleteId = useSelector(state => state.app.client.deleteId);
  const queryClient = useQueryClient();
  const dispatch = useDispatch();
  const router = useRouter();

  const handler = () => {
    router.push('/form'); // Ganti dengan rute halaman form Anda
  };

  const deleteHandler = async () => {
    if (deleteId) {
      await deleteUser(deleteId);
      await queryClient.prefetchQuery('users', getUsers);
      await dispatch(deleteAction(null));
      showAlert(); // Menampilkan alert setelah penghapusan berhasil
    }
  };

  const cancelHandler = async () => {
    await dispatch(deleteAction(null));
  };

  const [user, loading, error] = useAuthState(auth);
  console.log({ user });

  useEffect(() => {
    if (!loading && !user) {
      router.push('/sign_up');
    }
  }, [user, loading]);

  const showAlert = () => {
    alert("Employee successfully deleted!");
  };

  return (
    <section className="min-h-screen bg-gradient-to-r from-blue-100 to-indigo-100">
      <Head>
        <title>CRUD Application</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <main className='py-5'>
        <div className="container mx-auto">
          <div className="flex justify-between items-center">
            <h1 className='text-xl md:text-5xl text-center font-bold py-10'>Employee Management</h1>
            <button onClick={() => signOut(auth)} className='flex bg-red-500 text-white px-4 py-2 border rounded-md hover:bg-red-600'>
              Logout
            </button>
          </div>

          <div className="container mx-auto flex justify-between py-5 border-b">
            <div className="left flex gap-3">
              <button onClick={handler} className='flex bg-indigo-500 text-white px-4 py-2 border rounded-md hover:bg-gray-50 hover:border-indigo-500 hover:text-gray-800'>
                Add Employee <span className='px-1'><BiUserPlus size={23}></BiUserPlus></span>
              </button>
            </div>
            { deleteId ? <DeleteComponent deleteHandler={deleteHandler} cancelHandler={cancelHandler} /> : null }
          </div>

          {/* table */}
          <div className="bg-white shadow-md rounded-lg p-6">
            <Table />
          </div>
        </div>
      </main>
    </section>
  );
}

function DeleteComponent({ deleteHandler, cancelHandler }) {
  return (
    <div className='fixed inset-0 flex items-center justify-center bg-black bg-opacity-50 z-50'>
      <div className='bg-white p-5 rounded-md shadow-lg'>
        <p className='text-gray-800 text-center'>Are you sure?</p>
        <div className='flex justify-center gap-5 mt-5'>
          <button onClick={deleteHandler} className='flex bg-red-500 text-white px-4 py-2 border rounded-md hover:bg-rose-500 hover:border-red-500 hover:text-gray-50'>
            Yes <span className='px-1'><BiX color='rgb(255 255 255)' size={25} /></span>
          </button>
          <button onClick={cancelHandler} className='flex bg-green-500 text-white px-4 py-2 border rounded-md hover:bg-green-600 hover:border-green-500 hover:text-gray-50'>
            No <span className='px-1'><BiCheck color='rgb(255 255 255)' size={25} /></span>
          </button>
        </div>
      </div>
    </div>
  );
}
